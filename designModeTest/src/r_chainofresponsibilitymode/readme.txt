责任链模式（Chain of Responsibility）
接下来我们将要谈谈责任链模式，有多个对象，每个对象持有对下一个对象的引用，这样就会形成一条链，请求在这条链上传递，直到某一对象决定处理该请求。
但是发出者并不清楚到底最终那个对象会处理该请求，所以，责任链模式可以实现，在隐瞒客户端的情况下，对系统进行动态的调整。先看看关系图：


Abstracthandler类提供了get和set方法，方便MyHandle类设置和修改引用对象，
MyHandle类是核心，实例化后生成一系列相互持有的对象，构成一条链。



此处强调一点就是，链接上的请求可以是一条链，可以是一个树，还可以是一个环，模式本身不约束这个，需要我们自己去实现，
同时，在一个时刻，命令只允许由一个对象传给另一个对象，而不允许传给多个对象。



意图： 
使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。 
适用性： 
有多个的对象可以处理一个请求，哪个对象处理该请求运行时刻自动确定。 
你想在不明确指定接收者的情况下，向多个对象中的一个提交一个请求。 
可处理一个请求的对象集合应被动态指定。 
